<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="28" failures="2" errors="0" time="16.537">
  <testsuite name="POC Tests" errors="0" failures="0" skipped="5" timestamp="2024-11-05T20:58:25" time="3.017" tests="6">
    <testcase classname="POC Tests Get requests GET /posts" name="POC Tests Get requests GET /posts" time="0">
      <skipped/>
    </testcase>
    <testcase classname="POC Tests Get requests GET /comments with query parameters" name="POC Tests Get requests GET /comments with query parameters" time="0">
      <skipped/>
    </testcase>
    <testcase classname="POC Tests POST requests POST /posts" name="POC Tests POST requests POST /posts" time="0">
      <skipped/>
    </testcase>
    <testcase classname="POC Tests PUT requests PUT /posts/{id}" name="POC Tests PUT requests PUT /posts/{id}" time="0">
      <skipped/>
    </testcase>
    <testcase classname="POC Tests PATCH requests PATCH /posts/{id}" name="POC Tests PATCH requests PATCH /posts/{id}" time="0">
      <skipped/>
    </testcase>
    <testcase classname="POC Tests DELETE requests DELETE /posts/{id}" name="POC Tests DELETE requests DELETE /posts/{id}" time="0.653">
    </testcase>
  </testsuite>
  <testsuite name="Upload images" errors="0" failures="0" skipped="1" timestamp="2024-11-05T20:58:25" time="4.227" tests="2">
    <testcase classname="Upload images Test single image upload POST -  single file upload " name="Upload images Test single image upload POST -  single file upload " time="0">
      <skipped/>
    </testcase>
    <testcase classname="Upload images Test multiple image upload POST -  multiple file upload " name="Upload images Test multiple image upload POST -  multiple file upload " time="1.77">
    </testcase>
  </testsuite>
  <testsuite name="GET Request " errors="0" failures="0" skipped="4" timestamp="2024-11-05T20:58:25" time="4.633" tests="5">
    <testcase classname="GET Request  Tests brands GET ALL and assert, GET /brands" name="GET Request  Tests brands GET ALL and assert, GET /brands" time="0">
      <skipped/>
    </testcase>
    <testcase classname="GET individual request  Tests brands GET specific ID and assert, GET /brands/:id" name="GET individual request  Tests brands GET specific ID and assert, GET /brands/:id" time="0">
      <skipped/>
    </testcase>
    <testcase classname="POST request Test POST /brands request" name="POST request Test POST /brands request" time="0">
      <skipped/>
    </testcase>
    <testcase classname="PUT request PUT request PUT /brands/{id}" name="PUT request PUT request PUT /brands/{id}" time="0">
      <skipped/>
    </testcase>
    <testcase classname="PUT request Delete brand id  DELETE /brand/:id" name="PUT request Delete brand id  DELETE /brand/:id" time="2.325">
    </testcase>
  </testsuite>
  <testsuite name="Categories" errors="0" failures="1" skipped="0" timestamp="2024-11-05T20:58:25" time="8.93" tests="4">
    <testcase classname="Categories GET /categories" name="Categories GET /categories" time="2">
    </testcase>
    <testcase classname="Categories Create Categories POST /categories" name="Categories Create Categories POST /categories" time="0.592">
    </testcase>
    <testcase classname="Categories Update categories PUT /categories" name="Categories Update categories PUT /categories" time="0.578">
      <failure>Error: expect(received).toEqual(expected) // deep equality

Expected: &quot;testitting this u&quot;
Received: undefined
    at C:\Users\BilalDedovic\Desktop\Bilal\apiTesting\specs\categoriesTest.spec.ts:66:38
    at Generator.next (&lt;anonymous&gt;)
    at fulfilled (C:\Users\BilalDedovic\Desktop\Bilal\apiTesting\specs\categoriesTest.spec.ts:5:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)</failure>
    </testcase>
    <testcase classname="Categories Delete categories DELETE /categories" name="Categories Delete categories DELETE /categories" time="0.579">
    </testcase>
  </testsuite>
  <testsuite name="Brands" errors="0" failures="1" skipped="0" timestamp="2024-11-05T20:58:25" time="15.759" tests="11">
    <testcase classname="Brands GET Request  Tests brands GET ALL and assert, GET /brands" name="Brands GET Request  Tests brands GET ALL and assert, GET /brands" time="2.294">
    </testcase>
    <testcase classname="Brands Create brands Test POST /brands request" name="Brands Create brands Test POST /brands request" time="0.003">
    </testcase>
    <testcase classname="Brands Create brands Schema Test - name is mandatory field" name="Brands Create brands Schema Test - name is mandatory field" time="0.454">
    </testcase>
    <testcase classname="Brands Create brands Schema Test - minimum char length for name &gt; 1 " name="Brands Create brands Schema Test - minimum char length for name &gt; 1 " time="0.381">
    </testcase>
    <testcase classname="Brands Create brands Business Logic - duplicating entries are not allowed" name="Brands Create brands Business Logic - duplicating entries are not allowed" time="0.462">
    </testcase>
    <testcase classname="Brands Create brands Business Logic - brand does not exist on false id" name="Brands Create brands Business Logic - brand does not exist on false id" time="1.476">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 404
Received: 422
    at C:\Users\BilalDedovic\Desktop\Bilal\apiTesting\specs\brandsTestsRewritten.spec.ts:105:40
    at Generator.next (&lt;anonymous&gt;)
    at fulfilled (C:\Users\BilalDedovic\Desktop\Bilal\apiTesting\specs\brandsTestsRewritten.spec.ts:10:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)</failure>
    </testcase>
    <testcase classname="Brands Create brands Schema Test - maximum char length for name &gt; 30 is not accepted and description must be string " name="Brands Create brands Schema Test - maximum char length for name &gt; 30 is not accepted and description must be string " time="1.241">
    </testcase>
    <testcase classname="Brands Create brands Business Logic validation - not able to update and delete brands that does not exist" name="Brands Create brands Business Logic validation - not able to update and delete brands that does not exist" time="1.416">
    </testcase>
    <testcase classname="Brands GET individual brand Tests brands GET specific ID and assert, GET /brands/:id" name="Brands GET individual brand Tests brands GET specific ID and assert, GET /brands/:id" time="0.468">
    </testcase>
    <testcase classname="Brands PUT request PUT request PUT /brands/{id}" name="Brands PUT request PUT request PUT /brands/{id}" time="0.582">
    </testcase>
    <testcase classname="Brands Delete brand id  DELETE /brand/:id" name="Brands Delete brand id  DELETE /brand/:id" time="0.563">
    </testcase>
  </testsuite>
</testsuites>